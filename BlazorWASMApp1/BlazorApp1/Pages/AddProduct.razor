@page "/addproduct"
@using BlazorApp1.Models;
@inject IProductService productService;
@inject ICategoryService categoryService;
@inject NavigationManager NavigationManager;

<TitleComponentCustom TitleNew="Add Product"></TitleComponentCustom>

<button class="btn btn-dark" @onclick="@(()=> NavigationManager.NavigateTo("/product"))">Go back to products</button>

<EditForm Model="@product" OnSubmit="@Save">

    <div class="row">

        <div class="col-8 form-group">
            <label for="title" class="col-form-label"> Title </label>
            <InputText id="title" @bind-Value="productLocal.Title" required class="form-control" />
        </div>

        <div class="col form-group">
            <label for="price" class="col-form-label">Price</label>
            <InputNumber id="price" @bind-Value="productLocal.Price" min="0" required class="form-control" />
        </div>

    </div>

    <div class="row">

        <div class="col form-group">
            <label for="category" class="col-form-label">Category</label>
            <InputSelect id="category" @bind-Value="productLocal.CategoryId" required class="form-control">
                <option>Select Category...</option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col form-group">
            <label for="image" class="col-form-label">Image (Url)</label>
            <InputText id="image" @bind-Value="productLocal.Image" required class="form-control" />
        </div>

    </div>

    <div class="form-group">
        <label for="description" class="col-form-label">Description</label>
        <InputTextArea id="description" @bind-Value="productLocal.Description" required class="form-control"></InputTextArea>
    </div>

    <hr />
    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code
{
    private Product product = new();

    private ProductNewDto productLocal = new();

    private List<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.Get();
    }

    private async Task Save()
    {
        //product.Images = new Uri[] { new Uri(productLocal.Image) };
        var imgNew = new Uri[] { new Uri(productLocal.Image) };
        product.Images = imgNew;
        product.Title = productLocal.Title;
        product.Price = productLocal.Price;
        product.CategoryId = productLocal.CategoryId;
        product.Description = productLocal.Description;
        await productService.Add(product);
        NavigationManager.NavigateTo("/product");
    }

    private class ProductNewDto
    {
        public long Id { get; set; }
        public string Title { get; set; }
        public string Image { get; set; }
        public int Price { get; set; }
        public int CategoryId { get; set; }
        public string Description{ get; set; }
    }
}